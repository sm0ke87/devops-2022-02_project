kind: Namespace
apiVersion: v1
metadata:
  name: app
---
#RabbitMQ
kind: Deployment
apiVersion: apps/v1
metadata:
  name: rabbitmq
  namespace: app
  labels:
    app: rabbitmq
    project: gitlab-project
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
      project: gitlab-project
  template:
    metadata:
      name: rabbitmq
      labels:
        app: rabbitmq
        project: gitlab-project
    spec:
      hostname: rabbitmq
      hostAliases:
      - ip: "127.0.0.1"
        hostnames:
        - "staticrabbit"
      containers:
      - name: rabbitmq
        # так мы назвали наш docker image
        image: sm0ke87/rabbitmq:main
---
kind: Service
apiVersion: v1
metadata:
  name: rabbitmq
  namespace: app
  labels:
    app: rabbitmq
    project: gitlab-project
spec:
  type: ClusterIP
  ports:
  - name: first
    protocol: TCP
    port: 5672
    targetPort: 5672
  - name: second  
    protocol: TCP
    port: 15672
    targetPort: 5672
  selector:
    app: rabbitmq
---
#Crawler
kind: Deployment
apiVersion: apps/v1
metadata:
  name: crawler
  namespace: app
  labels:
    app: crawler
    project: gitlab-project
spec:
  replicas: 1
  selector:
    matchLabels:
      app: crawler
      project: gitlab-project
  template:
    metadata:
      name: crawler
      labels:
        app: crawler
        project: gitlab-project
    spec:
      hostname: crawler
      containers:
      - name: crawler
        # так мы назвали наш docker image
        image: sm0ke87/search_engine_crawler:main
        env:
        - name: MONGO
          value: mongo
        - name: MONGO_PORT
          value: "27017"
---
kind: Service
apiVersion: v1
metadata:
  name: crawler
  namespace: app
  labels:
    app: crawler
    project: gitlab-project
spec:
  selector:
    app: crawler
  ports:
  - port: 8000
    protocol: TCP
    targetPort: 8000
---
#ui
kind: Deployment
apiVersion: apps/v1
metadata:
  name: ui
  namespace: app
  labels:
    app: ui
    project: gitlab-project
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ui
      project: gitlab-project
  template:
    metadata:
      name: ui
      labels:
        app: ui
        project: gitlab-project
    spec:
      hostname: ui
      containers:
      - name: ui
        # так мы назвали наш docker image
        image: sm0ke87/search_engine_ui:main
        env:
        - name: MONGO
          value: mongo
        - name: MONGO_PORT
          value: "27017"
---
kind: Service
apiVersion: v1
metadata:
  name: ui
  namespace: app
  labels:
    app: ui
    project: gitlab-project
spec:
  type: NodePort
  selector:
    app: ui
    project: gitlab-project
  ports:
  - port: 8000
    protocol: TCP
    targetPort: 8000
    
---
#mongo
kind: Deployment
apiVersion: apps/v1
metadata:
  name: mongo
  namespace: app
  labels:
    app: mongo
    project: gitlab-project
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
      project: gitlab-project
  template:
    metadata:
      name: mongo
      labels:
        app: mongo
        project: gitlab-project
    spec:
      hostname: mongo
      containers:
      - name: mongo
        # так мы назвали наш docker image
        image: mongo:3.2
---
kind: Service
apiVersion: v1
metadata:
  name: mongo
  namespace: app
  labels:
    app: mongo
    project: gitlab-project
spec:
  ports:
  - port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: mongo
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress
  namespace: app
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - pathType: Prefix
            backend:
              service:
                name: ui
                port:
                  number: 8000
            path: /
