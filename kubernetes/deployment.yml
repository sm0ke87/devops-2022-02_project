kind: Namespace
apiVersion: v1
metadata:
  name: app
---
#RabbitMQ
kind: Deployment
apiVersion: apps/v1
metadata:
  name: rabbitmq
  namespace: app
  labels:
    k8s-app: rabbitmq
    project: gitlab-project
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: rabbitmq
  template:
    metadata:
      name: rabbitmq
      labels:
        k8s-app: rabbitmq
    spec:
      hostname: rabbitmq
      hostAliases:
      - ip: "127.0.0.1"
        hostnames:
        - "staticrabbit"
      containers:
      - name: rabbitmq
        # так мы назвали наш docker image
        image: sm0ke87/rabbitmq:main
---
kind: Service
apiVersion: v1
metadata:
  name: rabbitmq
  namespace: app
  labels:
    k8s-app: rabbitmq
    project: gitlab-project
spec:
  ports:
  - name: first
    protocol: TCP
    port: 5672
    targetPort: 5672
  - name: second  
    protocol: TCP
    port: 15672
    targetPort: 5672
  selector:
    k8s-app: rabbitmq
---
#Crawler
kind: Deployment
apiVersion: apps/v1
metadata:
  name: crawler
  namespace: app
  labels:
    k8s-app: crawler
    project: gitlab-project
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: crawler
  template:
    metadata:
      name: crawler
      labels:
        k8s-app: crawler
    spec:
      hostname: crawler
      containers:
      - name: crawler
        # так мы назвали наш docker image
        image: sm0ke87/search_engine_crawler:main
---
kind: Service
apiVersion: v1
metadata:
  name: crawler
  namespace: app
  labels:
    k8s-app: crawler
    project: gitlab-project
spec:
  selector:
    k8s-app: crawler
---
#ui
kind: Deployment
apiVersion: apps/v1
metadata:
  name: ui
  namespace: app
  labels:
    k8s-app: ui
    project: gitlab-project
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: ui
  template:
    metadata:
      name: ui
      labels:
        k8s-app: ui
    spec:
      hostname: ui
      containers:
      - name: ui
        # так мы назвали наш docker image
        image: sm0ke87/search_engine_ui:main
---
kind: Service
apiVersion: v1
metadata:
  name: ui
  namespace: app
  labels:
    k8s-app: ui
    project: gitlab-project
spec:
  selector:
    k8s-app: ui
  ports:
  - port: 8000
    protocol: TCP
    targetPort: 8000
    
---
#mongo
kind: Deployment
apiVersion: apps/v1
metadata:
  name: mongo
  namespace: app
  labels:
    k8s-app: mongo
    project: gitlab-project
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: mongo
  template:
    metadata:
      name: mongo
      labels:
        k8s-app: mongo
    spec:
      hostname: mongo
      containers:
      - name: mongo
        # так мы назвали наш docker image
        image: mongo:3.2
---
kind: Service
apiVersion: v1
metadata:
  name: mongo
  namespace: app
  labels:
    k8s-app: mongo
    project: gitlab-project
spec:
  ports:
  - port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    k8s-app: mongo
